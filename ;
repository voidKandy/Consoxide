use std::fs;
#[allow(unused)]
use std::process::Command;

fn main() {
    let out_path = "pane.txt";
    let pane = capture_current_pane().unwrap_or_else(|err| panic!("Problem with pane: {:?}", err));
    println!("{pane}");
    fs::write(out_path, pane).unwrap();
}

struct Pane {
    content: String,
    summary: String,
}

impl Pane {
    fn new() {
        todo!()
    }
}

fn panerate_function() {
    todo!("Create a function that keeps rate of the amount of lines being written in the current terminal and save every 10 lines, and append the lines to the file as you go to save on speed use")
}

fn capture_current_pane() -> Result<String, &'static String> {
    let command = Command::new("tmux")
        .args(["capture-pane", "-p", "-S", "-"])
        .output()
        .expect("Failed to capture pane");

    Ok(String::from_utf8_lossy(&command.stdout).to_string())
}
